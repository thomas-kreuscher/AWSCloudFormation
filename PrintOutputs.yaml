Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: Enter t2.micro, t2.small, t2.medium, m1.small or m1.large. Default is t2.micro
  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  AmiRegionMap: 
    us-east-2:
      MyAMI1: ami-0ea3c35c5c3284d82
    us-west-1:
      MyAMI1: ami-0819a8650d771b8be
    eu-west-1:
      MyAMI1: ami-02141377eee7defb9
    ap-southeast-1:
      MyAMI1: ami-0a312809c022a69d1
    ap-northeast-1:
      MyAMI1: ami-0742e8ec0e9a2f6f4
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - MyAMI1
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG 
  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 
Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName