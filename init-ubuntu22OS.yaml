Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for."
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - m1.small
      - m1.large
    Description: Enter t2.micro, t2.small, t2.medium, m1.small or m1.large. Default is t2.micro
  KeyName:
    Description: Name of EC2 login key
    Type: AWS::EC2::KeyPair::KeyName
Mappings:
  AmiRegionMap: 
    us-east-2:
      MyAMI1: ami-0ea3c35c5c3284d82
    us-west-1:
      MyAMI1: ami-0819a8650d771b8be
    eu-west-1:
      MyAMI1: ami-0a422d70f727fe93e
    ap-southeast-1:
      MyAMI1: ami-0a312809c022a69d1
    ap-northeast-1:
      MyAMI1: ami-0742e8ec0e9a2f6f4
Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Metadata: 
      AWS::CloudFormation::Init:
        config:
          packages:
            apt:
              apache2: []
              php: []
              wget: []
              unzip: []
              git: []
          commands:
            test:
              command: "wget https://www.tooplate.com/zip-templates/2133_moso_interior.zip && unzip 2133_moso_interior.zip -d /var/www/html/ && cp -r /var/www/html/2133_moso_interior/* /var/www/html/"
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>

                <h1>Welcome to CloudFormation.</h1>
                <p>This site is deployed by CloudFormation.</p>

                </body>
                </html>
          services:
            sysvinit:
              apache2:
                enabled: true
                ensureRunning: true
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - MyAMI1
      Tags:
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG
      UserData:
        'Fn::Base64':
          !Sub |
            #!/bin/bash -xe
            # Update and install prerequisites
            apt update -y
            apt install -y python3-pip
            # Install aws-cfn-bootstrap
            pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
            # Run cfn-init to configure the instance
            /usr/local/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
            # Signal CloudFormation of success or failure
            /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
  VprofileSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 
Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - WebServer
      - PublicDnsName
